apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.lukekorth.android_500px"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 5
        versionName "0.2.2"
    }

    signingConfigs {
        release {
            storeFile file(System.properties['keystore'])
            storePassword ""
            keyAlias System.properties['alias']
            keyPassword ""
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

android.buildTypes.each { type ->
    type.buildConfigField 'String', 'CONSUMER_KEY', System.properties['consumer_key'] ?: '""'
    type.buildConfigField 'String', 'CONSUMER_SECRET', System.properties['consumer_secret'] ?: '""'
}

dependencies {
    compile project(':ActiveAndroid')
    compile project(':500px-android-sdk')

    compile 'com.android.support:support-v4:21.0.3'

    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.squareup:otto:1.3.5'

    compile 'it.sephiroth.android.library.imagezoom:imagezoom:1.0.5'

    compile 'com.lukekorth:mailable_log:0.1.3'

    compile 'fr.nicolaspomepuy:discreetapprate:2.0@aar'
}

// borrowed from https://www.timroes.de/2014/01/19/using-password-prompts-with-gradle-build-files/
// and https://www.timroes.de/2013/09/22/handling-signing-configs-with-gradle/
gradle.taskGraph.whenReady { taskGraph ->
    // Only execute when we are trying to assemble a release build
    if (taskGraph.hasTask(':PhotoPaper:assembleRelease') || taskGraph.hasTask(':PhotoPaper:installRelease')) {
        def password = System.console().readPassword("\nPlease enter key passphrase: ")
        if (password.size() <= 0) {
            throw new InvalidUserDataException("You must enter a password to proceed.")
        }

        // Must create String because System.readPassword() returns char[]
        // (and assigning that below fails silently)
        password = new String(password)

        android.signingConfigs.release.storePassword = password
        android.signingConfigs.release.keyPassword = password
    }
}
